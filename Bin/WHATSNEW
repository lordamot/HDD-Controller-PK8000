 Ma80 revision history

 [;] Comment
 [*] Modified
 [+] Added feature
 [-] Removed feature
 [!] Bug fix

 v2.22	09/09/97 01:10
 [!]	ошибка при выводе времени работы (приводила к изменению
	памяти в случайных местах и случайным образом)
 [*]	несколько расширена дигностика "среды" выполнения

 v2.21	29/08/97 02:57
 [*]	несколько изменен текст сообщений на английском языке
	(спасибо Кириллу Мурзину 2:5030/25.36, хотя кое-что я оставил
	по-прежнему неправильным :)
 [;]	восстановление после "конца света", унесшего предыдущий
	рабочий вариант программы

 v2.20	29/07/97 13:19
 [+]	регистрация

 v2.19	03/07/97 04:57
 [*]	внутренние изменения (часть п/п перенесена в библиотеки)
 [*]  	проверка стека на переполнение (или для расширения)
	происходит только для "нужных" п/п
 [-]	вернулись под Watcom 10.6 :( Мне не удалось заставить
 	работать OS/2 версию с той же скоростью, что и раньше

 v2.18	15/06/97 04:45
 [;]	32битные версии перекомпилированы Watcom 11.0
 [*]	для версии OS/2 добавлена проверка стека на переполнение

 v2.17	12/06/97 01:08
 [*]	несколько изменена п/п обработки входной строки, синтаксис
 	остался прежним
 [+]	в 32 разрядных версиях можно работать с длинными именами
	файлов, хотя и не со всеми (заключая их в кавычки в командной
	строке); при этом запятая, отделяющая имя объектного файла от
	имени файла листинга должна быть опущена
 [*]	расширение командного файла по умолчанию .cm8 (не помню
 	какое было раньше :)

 v2.16	10/06/97 10:49
 [+]	добавлены ключи /ml и /mu, указывающие, соответственно,
 	различать или не различать регистр символов в именах (case
 	sensitivity on symbols)
 [;]    включение новых функций приводит к "утяжелению" кода,
 	скорость ассемблирования упала по сравнению с версией 2.00
	примерно в 1.1 раза :(
 [;]    использования ключа /ml несколько ускоряет процесс
 	ассемблирования (примерно на 3-5%)
 [!]    незначительно подправлены значения типов арифметических
 	операций (но ошибки m80 до конца не убраны)
 [-]    расширение включаемых файлов по умолчанию снова .m80 :)

 v2.15 	10/06/97 01:23
 [+]	добавлен ключ /i для задания пути поиска для включаемых
 	файлов
 [;]	поиск включаемых файлов осуществляется сначала в текущем
 	каталоге, затем в каталогах, задаваемых ключом /i, и наконец
	в каталогах, указанных в переменной окружения MA80 (если
	переменная установлена)
 [*]	изменение расширения файла по умолчанию с .m80 на .inc

 v2.14	06/06/97 10:28
 [+]	введен модификатор optimize, запрещающий оптимизацию на
 	участке программы
 [+]	введен модификатор ext_mnemonics, разрешающий расширенные
	мнемоники некоторых команд
 [!]	добавлена индикация ошибки при повторном определении значения
	внешнему переопределяемому символу (в режиме ideal)
 [*]	изменено действие директивы GLOBAL в режиме ideal, в
 	зависимости от использования, указанный в этой директиве
	символ получает атрибут "внешний" или "глобальный"
 [+]    добавлены некоторые комплементарные ключи командной строки
 [!]    подправлен вывод перекрестных ссылок (при ключе /c)

 v2.13 	04/06/97 07:45
 [+]	локальные символы (и все, что с ними связано) (отстутствует в demo)
 [;]	введены два типа локальных меток: обычные, вида 1$ и
 	префиксируемые, вида @@1, никак не связанные друг с другом
 [*]	изменение алгоритма оптимизации для соответствия
 	локальным меткам
 [!]	ошибка использования внутренних символов (== и локальных),
	как внешних (##)

 v2.12  02/06/97 02:49
 [*]	сокращено число проходов для оптимизации, изменен алгоритм
 	(в среднем получилось в полтора раза быстрее)
 [;]	по умолчанию при задании оптимизации делается один
 	дополнительный "первый" проход. Как показал опыт дальнейшие
	проходы на среднестатистических текстах дают еле заметную
	экономию (первый проход оптимизации на 20Кб кодовом файле
	процессора I8080 -- после компановщика -- дал около 800 байт,
	второй проход добавил к ним 4).

 v2.11	01/06/97 08:40
 [+]  	оптимизация jmp для Z80 (отстутствует в demo)
 [+]	новая команда br (jp или jr в зависимости от возможности)
	(аналогично предыдущему, т. е. команда-то есть...)
 [*]	новый бит в ..MODE.. (4 - демоверсия)
 [*]	индикация ошибки использования неопределенного символа в
 	директиве .phase (режим ideal)
 [;]	такая индикация не всегда оправдана, т. к. в принципе тело
 	директивы .phase может быть посчитано на первом  проходе с
	неизвестым базовым адресом, а затем, нормально вставлено на
	втором. Но если внутри .phase будут объявляться символы,
	зависящие от $, то возникнет ошибка фазы трансляции, которая,
	в зависимости от дальнейшего использования этих
	символов, будет индицирована самым загадочным образом. Тогда,
	как "виновник" показан вообще не будет (естественно, что на
	первом проходе могут использоваться неопределенные пока
	символы, а на втором проходе значение базы для .phase будет
	уже определено).  Обойти индикацию ошибки можно задав ключик
	/nep или можно переходить при объявлении блока .phase
	в режим M80

 v2.10	30/05/97 12:21
 [!]	неправильно работали директивы ifdef, ifndef внутри
 	блока условной транcляции (увеличивая стек при
	ложности внешнего условия на два, вместо одного)
 [!]	где-то была внесена ошибка (видимо в 2.07) -- ассемблер
 	"проглатывал" несуществующие  операторы, никак их не
	диагностируя
 [+]	введены внутренние переменные ..DATE.., ..TIME..,
 	..RADIX.., ..MODE.., ..FILE..
 [*]	в irpc допустима подмена строкового символа ( == ),
 	если используются угловые скобки для аргумента

 v2.09	30/05/97 00:29
 [+]	допустима запись некоторых операторов-слов операторами-знаками,
	типа eq -> ==, or -> |, и так далее

 v2.08 	29/05/97 07:04
 [!]	исправлена проверка значения выражений в 32битных вирсиях,
	которая приводила к недиагностированию ошибок в командах
	относительных переходов и размещению не байтовых значений
	(спасибо М. Кондратьеву 2:5030/362.1)
 [+]	возможна генерация под MSDOS 16битной версии, работающей
	с 32битными операндами
 [;]	по умолчанию 16битаная версия MSDOS оперирует с 16разрядными
	операндами. Это приводит к тому, что, например,
	команда rept 65536 не выполнит ни одного цикла. Тогда как
	в 32битных версиях ассемблера (DOS4G и OS/2) число повторов
	будет 65536
 [*]	формат вывода листинга (значения выражений превышающие
	16 бит выводятся как ????)
 [;]	уже не alpha

 v2.07	27/05/97 11:33
 [+]	добавлена директива PUBLICALL (nonDemo)
	27/05/97 04:18
 [!]	исправлено определение макро: допустимы пробелы между
	аргументами и разделителями, и коментарий в строке определения

 v2.06	26/05/97 10:35
 [+]	добавлены директивы .accept, .accepts
 [!]	исправлено, что для == может быть пустое выражение

 v2.05	24/05/97 12:47
 [*]	немного доработан листинг: вывод флага работы операторов
 	условной трансляции; вывод символа = при определении
 	символа (не метки), и символа s для ==
 [+] 	модификатор %f для subttl
	24/05/97 08:53
 [*]	значение аргументов в .PRINTX могут быть любого типа

 v2.04	23/05/97 07:06
 [+]	добавлены директивы .PRINTX2, .ERROR; мнемоника INF
 [+]	добавлены русские сообщения об ошибках трансляции (ключ /a)

 v2.03	21/05/97 13:51
 [*]	изменен формат хранения текста мнемоник операторов, директив,
	инструкций
 	21/05/97 11:03
 [!]	еще раз: ошибка сообщения об ошибке двойного определения метки
	21/05/97 04:48
 [!]	ошибка многократного определения переменных ==
 [*]	вывод расшифровки сообщения об ошибках и на первом проходе

 v2.02	21/05/97 02:42
 [!]	ошибка повторного определения метки в том же сегменте
	с тем же адресом

 v2.01 	20/05/97 09:17
 [+]	детектирование ошибочных equ (hl) и ld	a, a+a
 [+]	добавлена обработка символа = (так же, как и DEFL)
 [+]	добавлен символ == (запоминает строку для символа с посл.
	ее подстановкой, подстановка происходит не во всех случаях --
	описывается для каждой директивы отдельно).
 [+]	сделано, что для nonDemo варианта предварительно строится
	дерево мнемоник,
 [-]	убрано -- оказалось, что медленнее

 v2.00  18/05/97 02:00
 [;]    Alpha версия.

 v2.00  14/11/96 07:27
 [;] 	Beta. Попытка создания ассемблера на базе Ma80
